---
- name: Second Setup
  hosts: '{{ target }}'
  user: '{{ admin_user }}'
  become: yes

  vars_prompt:

    - name: ansible_become_password
      prompt: Root Password on Target Machine?

    - name: mail_adress_1password
      prompt: Which mail adress 1Ppassword?
      private: no

    - name: master_password_1password
      prompt: Master Password 1Password

    - name: chezmoi_user
      prompt: Username for chezmoi dotfiles
      private: no

  pre_tasks:
    - name: Install pexpect
      shell: easy_install pexpect


  tasks:
    - name: Check if oh-my-zsh exists
      stat: 
        path: '/Users/{{ admin_user }}/.oh-my-zsh'
      register: oh_my_zsh_exists
      become: no
    
    - name: Install Oh My ZSH
      become: no
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      
    - name: Install Spaceship theme
      shell: git clone https://github.com/spaceship-prompt/spaceship-prompt.git "/Users/{{ admin_user }}/.oh-my-zsh/custom/themes/spaceship-prompt" --depth=1

    # TODO: Check this!
    - name: Setup Dotfiles
      become: no
      ansible.builtin.expect: 
        command: zsh -c eval `/usr/local/bin/op signin my` && /opt/homebrew/bin/chezmoi init --apply '{{ chezmoi_user }}'
        responses:
          'Enter the password for {{ mail_adress_1password }} at my.1password.com:': '{{ master_password_1password }}'
      # shell: eval `/usr/local/bin/op signin my` && /opt/homebrew/bin/chezmoi -- init --apply {{ chezmoi_user }}
      # tags: ['dotfiles']

    - name: Check if vim-plug is already installed
      stat:
        path: '/Users/{{ admin_user }}/.local/share/nvim/site/autoload/plug.vim'
      register: vim_plug_not_present
      become: no

    - name: Install Vim-plug
      when: not vim_plug_not_present.stat.exists
      shell: sh -c 'curl -fLo "/Users/{{ admin_user }}/.local/share}"/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
      become: no
      tags: ['nvim']

    - name: Install Neovim Plugins
      shell: /opt/homebrew/bin/nvim +PlugInstall +"CocInstall coc-dot-complete coc-json coc-markdownlint coc-prettier coc-pyright coc-sh coc-texlab coc-translator coc-yaml" +qall
      tags: ['nvim']
      become: no

    # - name: Unconditionally reboot the machine with all defaults
    #   reboot:

      
